---
pipeline:
    name: linCNV # TESTING
    description: "Analyze 10x scCNV data for single-cell and clonal copy number variants"
    # version: v0.0.1
# suiteVersions:
#     suiteName: v0.0.0 # use this version of a suite invoked as 'suite//module', etc. [latest]
actions: 
    _global:
        environment: linCNV
        condaFamilies:
            - base-0.1
            - r-4.2
            - rhdf5     
        # optionFamilies:
        #     - xxxx
    do:
        order: 1
        thread: do
        # condaFamilies:
        #     - xxxx-1.0        
        optionFamilies:
            - 10x-input
        resources:
            required:
                total-ram: 16G
            recommended: 
                n-cpu: 8
                ram-per-cpu: 2G
        job-manager:
            recommended:
                time-limit: 1:00:00
        description: "Extract and normalize bin counts, call single-cell CNVs"      
condaFamilies:
    rhdf5:
        dependencies:
            - bioconductor-rhdf5=2.38.1        
optionFamilies:     
    10x-input:
        options:
            input-dir: 
                order: 1
                short: i
                type: string
                required: true
                default: null
                directory:
                    must-exist: true
                description: "Cell Ranger output directory, one sample per named sub-directory"  
            input-name: 
                order: 2
                short: I
                type: string
                required: true
                default: null
                description: "name of the sub-directory of input-dir with data from one sample"          
# package:
#     uploadType: xxxx  # a signal to the Stage 2 framework regarding the package contents
#     packageAction: do # the pipeline action after which the package should assembled
#     files:
#         xxxx: # a contentFileType of any name you choose; 'manifestFile' has special meaning
#             type: xxxx # additional information as to the file type
#             file: $DATA_FILE_PREFIX.xxxx
#         manifestFile: # a sample manifest
#             type: manifest-file
#             manifestType: xxxx
#             file: $XXXX.xxxx
# container:
#     supported: false    
#     registry:  ghcr.io  # domain name of your OCI-compatible, oras-accessible, container registry [ghcr.io]
#     owner:     xxxxxxxx # REQUIRED: the name of the owner, e.g., user or organization, at 'registry'
#     installer: apt-get  # the installer program used by the container OS, typically apt-get or yum [apt-get]
