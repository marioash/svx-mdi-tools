---
pipeline:
    name: svCapture
    description: "Characterize structural variant junctions in short-read, paired-end capture library(s)"
    version: v0.0.0
suiteVersions:
    genomex-mdi-tools: main 
actions:
    align:
        order: 1
        module: genomex-mdi-tools//align/dna-paired-end  
    collate:
        order: 2
        condaFamilies: # matches 'align' to share an environment
            - genomex-mdi-tools//base
            - genomex-mdi-tools//bwa
        optionFamilies: # these options apply to all actions
            - genomex-mdi-tools//genome
            - genomex-mdi-tools//name-bam-file
            - genomex-mdi-tools//bam-format
            - genomex-mdi-tools//illumina-type
            - genomex-mdi-tools//read-filtering
            - genomex-mdi-tools//read-merging
            - grouping
            - consensus
            - genomex-mdi-tools//target-region
        resources:
            required:
                total-ram: 32G
            recommended: 
                n-cpu: 8
                ram-per-cpu: 4G
        job-manager:
            recommended:
                time-limit: 24:00:00
        description: "collate read groups, make consensuses, and re-align to genome"
    extract:
        order: 3
        module: extract
    find:
        order: 4
        module: find2
    # find:
    #     order: 3
    #     module: find  
    # compare:
    #     order: 4
    #     module: compare
package:
    find: # the pipeline action after which a data package should assembled
        uploadType: svCapture # a signal to the Stage 2 framework regarding the package contents
        files:
            targetsBed:
                type: bed
                file: $TARGETS_BED          
            # environment: # TODO: probably replace this by printing READ_LEN MAX_TLEN or what have you to logs, carried into package automatically
            #     type: json 
            #     file: $FIND_PREFIX.environment.json
            structuralVariants: # TODO: support read a glob of files, not just a single file path
                type: tab-delimited
                file: $FIND_PREFIX.structural_variants.gz
            allNodes:
                type: tab-delimited
                file: $FIND_PREFIX.all_nodes.txt
            # manifestFile: # a sample manifest
            #     type: manifest-file
            #     manifestType: xxxx
            #     file: $XXXX.xxxx   
# package:
#     compare: # the pipeline action after which a data package should assembled
#         uploadType: svCapture # a signal to the Stage 2 framework regarding the package contents
#         files:
#             targetsBed:
#                 type: bed
#                 file: $TARGETS_BED          
#             environment: # TODO: probably replace this by printing READ_LEN MAX_TLEN or what have you to logs, carried into package automatically
#                 type: json 
#                 file: $COMPARE_PREFIX.environment.json
#             structuralVariants:
#                 type: tab-delimited
#                 file: $COMPARE_PREFIX.structural_variants.gz
container:
    supported: false    # set to true if you maintain a container registry for this pipeline [false]
    registry:  ghcr.io  # domain name of your OCI-compatible, oras-accessible, container registry [ghcr.io]
    owner:     xxxxxxxx # REQUIRED: the name of the owner, e.g., user or organization, at 'registry'
    installer: apt-get  # the installer program used by the container OS, typically apt-get or yum [apt-get]
