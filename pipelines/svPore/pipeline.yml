---
pipeline:
    name: svPore
    description: "Structural variant analysis from Oxford Nanopore long reads"
    version: v0.0.0
suiteVersions:
    genomex-mdi-tools: main 
actions:
    _global:  
        environment: svPore  
        condaFamilies:
            - genomex-mdi-tools//base
            - genomex-mdi-tools//genome
            - r-4.2
            - svPore
        optionFamilies:
            - genomex-mdi-tools//genome
    download:
        order: 1
        module: genomex-mdi-tools//nanopore/download      
        override:
            ont-model: all             
    convert:
        order: 2
        module: genomex-mdi-tools//nanopore/convert
    basecall:
        order: 3
        module: genomex-mdi-tools//nanopore/basecall
        env-vars:     
            dorado-output-format: usam # retain tags
    align:
        order: 4
        module: genomex-mdi-tools//align/dna-long-read      
    extract:
        order: 5
        optionFamilies:
            - size-limits
        resources:
            required:
                total-ram: 16G
            recommended: 
                n-cpu: 2
                ram-per-cpu: 8G
        job-manager:
            recommended:
                time-limit: 4:00:00
        description: "pull molecules that provisionally nominate SV junctions and create a coverage map"
    # rebasecall:
    #     order: 6
    #     module: genomex-mdi-tools//nanopore/basecall
    #     override:
    #         description: use Dorado to perform slower, super-accuracy basecalling of target reads, mostly SV candidates
    #         ont-model:   dna_r10.4.1_e8.2_400bps_sup@v4.1.0 # the sup (super-accuracy) is recommended for best base-level analysis of SV reads and adapters
    #     env-vars:
    #         dorado-output-type:   target_reads        
    #         dorado-output-format: usam # retain tags, including moves for correlating time-current squiggle traces to base and junction calls
    #         dorado-emit-moves: true
    #         dorado-read-ids: true # i.e., read QNAMES from extract.target.qNames.txt
    # realign:
    #     order: 7
    #     module: genomex-mdi-tools//align/dna-long-read
    #     override:
    #         description: align super-accuracy target long reads to genome at high resolution using minimap2
    #     env-vars:
    #         input-file-type: target_reads
    #         paf-file-type: target_reads        
    #         minimap2-accuracy: high
    analyze:
        order: 8
        optionFamilies:
            - genomex-mdi-tools//fastq-dir
            - genomex-mdi-tools//read-filtering               
            - size-limits
            - sv-finding   
        resources:
            required:
                total-ram: 32G
            recommended: 
                n-cpu: 8
                ram-per-cpu: 4G
        job-manager:
            recommended:
                time-limit: 8:00:00
        description: "apply read-level and molecule-level artifact filters"
    find:
        order: 9
        optionFamilies:
            - genomex-mdi-tools//read-filtering               
            - size-limits
            - sv-finding   
        resources:
            required:
                total-ram: 32G
            recommended: 
                n-cpu: 8
                ram-per-cpu: 4G
        job-manager:
            recommended:
                time-limit: 4:00:00
        description: "characterize novel SV paths in one or more input samples or nanopores"   
condaFamilies:
    svPore:
        dependencies:
            - r-e1071  # provides support vector machines for adapter finding
            - r-igraph # provies graph analysis for junction and read clustering
optionFamilies:
    size-limits:
        options:
            window-size:
                order: 1
                short: P
                type: integer
                required: false
                default: 1000
                description: "group SV endpoints and make coverage maps at a resolution of --window-size bp"   
            min-sv-size:
                order: 2
                short: Z
                type: integer
                required: false
                default: 10000
                description: "only report SVs >= --min-sv-size bp (ideally, --min-sv-size ~ 3 * --bandwidth)"
    sv-finding:
        options:
            min-alignment-size:
                order: 3
                short: a
                type: integer
                required: false
                default: 100
                description: "ignore junctions if either flanking alignment is <a bp long"
            min-alignment-identity:
                order: 4
                short: I
                type: double
                required: false
                default: 0.9
                description: "ignore junctions if either flanking alignment has <I gap-compressed match rate"       
            junction-bandwidth:
                order: 5
                short: b
                type: integer
                required: false
                default: 20
                description: "junction pairs with up to -b bp Euclidean distance are considered the same SV"                         
package:
    find: # the pipeline action after which a data package should assembled
        uploadType: svPore # a signal to the Stage 2 framework regarding the package contents
        files:
            # metadata:
            #     type: yml
            #     file: $FIND_PREFIX.metadata.yml
            manifestFile:
                type: comma-delimited
                manifestType: simple
                file: $MANIFEST_PREFIX.sample_manifest.csv
            chromosomesFile:
                type: rds
                file: $FIND_PREFIX.chromosome_metadata.rds
            coverageFile:
                type: zip
                file: $FIND_PREFIX.windowCoverage.zip
            edgesFile:
                type: rds
                file: $FIND_PREFIX.edges.rds
            junctionClustersFile:
                type: rds
                file: $FIND_PREFIX.junctionClusters.rds
            segmentsFile:
                type: rds
                file: $FIND_PREFIX.segments.rds
            segmentClustersFile:
                type: rds
                file: $FIND_PREFIX.segmentClusters.rds          
# container:
#     supported: false    # set to true if you maintain a container registry for this pipeline [false]
#     registry:  ghcr.io  # domain name of your OCI-compatible, oras-accessible, container registry [ghcr.io]
#     owner:     wilsontelab # REQUIRED: the name of the owner, e.g., user or organization, at 'registry'
#     installer: apt-get  # the installer program used by the container OS, typically apt-get or yum [apt-get]
